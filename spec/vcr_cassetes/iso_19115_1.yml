---
http_interactions:
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"params":"facetFilters=%5B%22category%3Astandard%22%5D&query=ISO+19115-1"}'
    headers:
      User-Agent:
      - Algolia for Ruby (1.26.0); Ruby (2.5.1)
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip,deflate
      Date:
      - Sun, 14 Apr 2019 05:26:28 GMT
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 14 Apr 2019 05:26:30 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - inline; filename=a.txt
      Content-Encoding:
      - gzip
    body:
      encoding: UTF-8
      string: '{"hits":[{"category":"standard","path":"/sites/isoorg/contents/data/standard/05/37/53798","uuid":"21e69a8e-8c93-4d66-8645-331ea63d64ba","title":"ISO
        19115-1:2014 Geographic information -- Metadata -- Part 1: Fundamentals","status":"Published","year":2019,"order":11,"text":"ISO
        19115-1:2014 defines the schema required for describing geographic information
        and services by means of metadata. It provides information about the identification,
        the extent, the quality, the spatial and temporal aspects, the content, the
        spatial reference, the portrayal, distribution, and other properties of digital
        geographic data and services. ISO 19115-1:2014 is applicable to: -the cataloguing
        of all types of resources, clearinghouse activities, and the full description
        of datasets and services; -geographic services, geographic datasets, dataset
        series, and individual geographic features and feature properties. ISO 19115-1:2014
        defines: -mandatory and conditional metadata sections, metadata entities,
        and metadata elements; -the minimum set of metadata required to serve most
        metadata applications (data discovery, determining data fitness for use, data
        access, data transfer, and use of digital data and services); -optional metadata
        elements to allow for a more extensive standard description of resources,
        if required; -a method for extending metadata to fit specialized needs. Though
        ISO 19115-1:2014 is applicable to digital data and services, its principles
        can be extended to many other types of resources such as maps, charts, and
        textual documents as well as non-geographic data. Certain conditional metadata
        elements might not apply to these other forms of data. ","objectID":"53798_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>19115-1</em>:2014 Geographic information -- Metadata -- Part 1: Fundamentals","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","19115","1"]},"text":{"value":"<em>ISO</em>
        <em>19115-1</em>:2014 defines the schema required for describing geographic
        information and services by means of metadata. It provides information about
        the identification, the extent, the quality, the spatial and temporal aspects,
        the content, the spatial reference, the portrayal, distribution, and other
        properties of digital geographic data and services. <em>ISO</em> <em>19115-1</em>:2014
        is applicable to: -the cataloguing of all types of resources, clearinghouse
        activities, and the full description of datasets and services; -geographic
        services, geographic datasets, dataset series, and individual geographic features
        and feature properties. <em>ISO</em> <em>19115-1</em>:2014 defines: -mandatory
        and conditional metadata sections, metadata entities, and metadata elements;
        -the minimum set of metadata required to serve most metadata applications
        (data discovery, determining data fitness for use, data access, data transfer,
        and use of digital data and services); -optional metadata elements to allow
        for a more extensive standard description of resources, if required; -a method
        for extending metadata to fit specialized needs. Though <em>ISO</em> <em>19115-1</em>:2014
        is applicable to digital data and services, its principles can be extended
        to many other types of resources such as maps, charts, and textual documents
        as well as non-geographic data. Certain conditional metadata elements might
        not apply to these other forms of data. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","19115","1"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/07/31/73118","uuid":"fa0eb80c-8af0-4b39-a369-c6ceb6e73181","title":"ISO
        19115-1:2014/Amd 1:2018 ","status":"Published","year":2018,"order":11,"objectID":"73118_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        <em>19115-1</em>:2014/Amd 1:2018 ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","19115","1"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/06/73/67325","uuid":"012e58ec-9339-4260-bb9d-04a24a8db765","title":"ISO
        19165-1:2018 Geographic information -- Preservation of digital data and metadata
        -- Part 1: Fundamentals","status":"Published","year":2018,"order":11,"text":"ISO
        19165-1:2018 defines a preservation metadata extension of ISO 19115‑1. ISO
        19165-1:2018 defines the requirements for the long-term preservation of digital
        geospatial data. These data also include metadata, representation information,
        provenance, context and any other content items that capture the knowledge
        that are necessary to fully understand and reuse the archived data. This document
        also refers to characteristics of data formats that are useful for the purpose
        of archiving. Geospatial data are preserved as a geospatial information package
        (IP). This document defines the requirements of the geospatial archival IP
        and details of the geospatial submission and the dissemination IPs. A geospatial
        archival IP is fully self-describing and allows a future reconstruction of
        the dataset without external documentation. The functional requirements for
        a preservation archive are defined in Annex D. ISO 19165-1:2018 complements
        standards developed by ISO/TC 211 as well as other ISO standards such as ISO
        14721. ","objectID":"67325_0","_highlightResult":{"title":{"value":"<em>ISO</em>
        19165-1:2018 Geographic information -- Preservation of digital data and metadata
        -- Part 1: Fundamentals","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["iso"]},"text":{"value":"<em>ISO</em>
        19165-1:2018 defines a preservation metadata extension of <em>ISO</em> <em>19115‑1</em>.
        <em>ISO</em> 19165-1:2018 defines the requirements for the long-term preservation
        of digital geospatial data. These data also include metadata, representation
        information, provenance, context and any other content items that capture
        the knowledge that are necessary to fully understand and reuse the archived
        data. This document also refers to characteristics of data formats that are
        useful for the purpose of archiving. Geospatial data are preserved as a geospatial
        information package (IP). This document defines the requirements of the geospatial
        archival IP and details of the geospatial submission and the dissemination
        IPs. A geospatial archival IP is fully self-describing and allows a future
        reconstruction of the dataset without external documentation. The functional
        requirements for a preservation archive are defined in Annex D. <em>ISO</em>
        19165-1:2018 complements standards developed by <em>ISO</em>/TC 211 as well
        as other <em>ISO</em> standards such as <em>ISO</em> 14721. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","19115","1"]}}},{"category":"standard","path":"/sites/isoorg/contents/data/standard/03/25/32579","uuid":"64e2fbe0-553d-4ccc-8581-c4d900aa5de2","title":"ISO/TS
        19115-3:2016 Geographic information --  Metadata -- Part 3: XML schema implementation
        for fundamental concepts","status":"Published","year":2016,"order":11,"text":"ISO/TS
        19115-3:2016 defines an integrated XML implementation of ISO 19115‑1, ISO
        19115‑2, and concepts from ISO/TS 19139 by defining the following artefacts:
        a)    a set of XML schema required to validate metadata instance documents
        conforming to conceptual model elements defined in ISO 19115‑1, ISO 19115‑2,
        and ISO/TS 19139; b)    a set of ISO/IEC 19757‑3 (Schematron) rules that implement
        validation constraints in the ISO 19115‑1 and ISO 19115‑2 UML models that
        are not validated by the XML schema; c)    an Extensible Stylesheet Language
        Transformation (XSLT) for transforming ISO 19115-1 metadata encoded using
        the ISO/TS 19139 XML schema and ISO 19115‑2 metadata encoded using the ISO/TS
        19139‑2 XML schema into an equivalent document that is valid against the XML
        schema defined in this document. ISO/TS 19115-3:2016 describes the procedure
        used to generate XML schema from ISO geographic information conceptual models
        related to metadata. The procedure includes creation of an UML model for XML
        implementation derived from the conceptual UML model. This implementation
        model does not alter the semantics of the target conceptual model, but adds
        abstract classes that remove dependencies between model packages, tagged values
        and stereotypes required by the UML to XML transformation software, and refactors
        the packaging of a few elements into XML namespaces. The XML schema has been
        generated systematically from the UML model for XML implementation according
        to the rules defined in ISO/TS 19139 or ISO 19118. ","objectID":"32579_0","_highlightResult":{"title":{"value":"<em>ISO</em>/TS
        19115-3:2016 Geographic information --  Metadata -- Part 3: XML schema implementation
        for fundamental concepts","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["iso"]},"text":{"value":"<em>ISO</em>/TS
        19115-3:2016 defines an integrated XML implementation of <em>ISO</em> <em>19115‑1</em>,
        <em>ISO</em> 19115‑2, and concepts from <em>ISO</em>/TS 19139 by defining
        the following artefacts: a)    a set of XML schema required to validate metadata
        instance documents conforming to conceptual model elements defined in <em>ISO</em>
        <em>19115‑1</em>, <em>ISO</em> 19115‑2, and <em>ISO</em>/TS 19139; b)    a
        set of <em>ISO</em>/IEC 19757‑3 (Schematron) rules that implement validation
        constraints in the <em>ISO</em> <em>19115‑1</em> and <em>ISO</em> 19115‑2
        UML models that are not validated by the XML schema; c)    an Extensible Stylesheet
        Language Transformation (XSLT) for transforming <em>ISO</em> <em>19115-1</em>
        metadata encoded using the <em>ISO</em>/TS 19139 XML schema and <em>ISO</em>
        19115‑2 metadata encoded using the <em>ISO</em>/TS 19139‑2 XML schema into
        an equivalent document that is valid against the XML schema defined in this
        document. <em>ISO</em>/TS 19115-3:2016 describes the procedure used to generate
        XML schema from <em>ISO</em> geographic information conceptual models related
        to metadata. The procedure includes creation of an UML model for XML implementation
        derived from the conceptual UML model. This implementation model does not
        alter the semantics of the target conceptual model, but adds abstract classes
        that remove dependencies between model packages, tagged values and stereotypes
        required by the UML to XML transformation software, and refactors the packaging
        of a few elements into XML namespaces. The XML schema has been generated systematically
        from the UML model for XML implementation according to the rules defined in
        <em>ISO</em>/TS 19139 or <em>ISO</em> 19118. ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["iso","19115","1"]}}}],"nbHits":4,"page":0,"nbPages":1,"hitsPerPage":20,"processingTimeMS":1,"exhaustiveNbHits":true,"query":"ISO
        19115-1","params":"facetFilters=%5B%22category%3Astandard%22%5D&query=ISO+19115-1"}

        '
    http_version: 
  recorded_at: Sun, 14 Apr 2019 05:26:30 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/53798.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=901AE71436901970E6A9B7505858AF66; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Sun, 14 Apr 2019 05:26:33 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 14 Apr 2019 05:26:33 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/53798.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=8E2FABD0F6803ED2C952CC79BD934CAB; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Sun, 14 Apr 2019 05:26:36 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 14 Apr 2019 05:26:36 GMT
recorded_with: VCR 4.0.0
